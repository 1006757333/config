eureka:
  instance:
     instance-id: ${spring.cloud.client.ipAddress}:${server.port}
     prefex-ip-address: true
     hostname: ${spring.cloud.client.ipAddress}
     lease-renewal-interval-in-seconds: 5      # 心跳时间，即服务续约间隔时间（缺省为30s）
     lease-expiration-duration-in-seconds: 10  # 发呆时间，即服务续约到期时间（缺省为90s）
  client:
    serviceUrl.defaultZone: http://myjr:myjr012@localhost:8761/eureka/
    healthcheck.enabled: true  # 开启健康检查（依赖spring-boot-starter-actuator）
server:
  port: 9555
spring:
  application:
    name: finance-sys
  management:
    security:
        enabled: false

  redis:
      database: 0   #Redis数据库索引（默认为0）
      host: 192.168.53.111  #Redis服务器地址
      password: myjrredis #Redis服务器连接密码（默认为空）
      port: 9876   #Redis服务器连接端口
      sport: 26379 #哨兵的连接端口
      clusterName: mymaster #哨兵的主
      pool:
        max-active: 100   #连接池最大连接数
        max-wait: 300  #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 100  #连接池中的最大空闲连接
        min-idle: 20    #连接池中的最小空闲连接
      timeout: 1000         #连接超时时间（毫秒）





 #数据库连接
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.53.111:3306/jrservertest?useUnicode=true&characterEncoding=utf8&useSSL=false
    #url: jdbc:mysql://60.28.246.105:44443/my012jr?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    #password: myjrroot
    password: myjr012

# 初始化大小，最小，最大
    min-idle: 5
    initial-size: 5
    max-active: 30
# 配置获取连接等待超时的时间
    max-wait: 600000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validation-query: SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
# 配置监控统计拦截的filters，，去掉后监控界面sql无法统计'wall'用于防火墙
    filters: stat,wall,log4j



 #jsp配置
  jpa:
    hibernate:
      database: MYSQL
      ddl-auto: none
      show-sql: true
logging:
  config:
      classpath: logback-spring.xml
  level:
    org:
      hibernate:
        SQL: DEBUG


